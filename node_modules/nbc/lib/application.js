var http = require('http'),
    router = require('./router'),
    methods = require('./methods'),
    events = require('events'),
    util = require('util'),
    _ = require('underscore');

function Application() {
    events.EventEmitter.call(this);

    this._router = new router(this);
    this._middlewares = [];
    this._httpServer = null;

    this.request = null;
    this.response = null;
}

util.inherits(Application, events.EventEmitter);

// app.{HTTP VERBS}()
methods.forEach(function(method) {
    Application.prototype[method.toLowerCase()] = function(path, callback) {
        this._router.register(method, path, callback);
        return this;
    };
});

Application.prototype.listen = function() {
    var self = this;

    if(self._httpServer) {
        throw new Error('application already started');
    }

    // register router as the last middleware
    self.use(self._router);

    // start HTTP server
    self._httpServer = http.createServer(self);
    return self._httpServer.listen.apply(self._httpServer, arguments);
};

exports = module.exports = Application;
